generator client {
  provider = "prisma-client-js"
  engineType = "binary"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int     @id @default(autoincrement())

  fortytwoId        Int     @unique
  username          String  @unique
  firstName         String
  lastName          String
  profilePicture    String
  email             String

  has2FA            Boolean

  friends           String[] @default([])
  blockedUsers      String[]

  createdAt         DateTime @default(now())

  statistics        Statistic?
  matchHistory      Game[]
  achievements      String[]
}

model Statistic {
  user              User    @relation(fields: [userId], references: [id])
  userId            Int     @unique

  rank              Int
  win               Int
  draw              Int
  loss              Int
  points            Int
}

model Game {
  id               Int     @id @default(autoincrement())

  players          User[]
  playerOneId      Int
  playerTwoId      Int
  playerOneScore   Int
  playerTwoScore   Int

  status           String // waiting, pending, finished

  createdAt        DateTime @default(now())
}

// model PlayersOnGames {
//   user          User @relation(fields: [userId], references: [id])
//   userId        Int
//   game          Game @relation(fields: [gameId], references: [id])
//   gameId        Int

//   @@id([userId, gameId])
// }

model Channel {
  id              Int     @id @default(autoincrement())

  private         Boolean @default(false)

  owner           String
  admins          String[] 
  users           String[]

  password        String?
  createdAt       DateTime @default(now())
}

model ChannelSanction {
  id              Int       @id @default(autoincrement())

  channelId       String
  user            String
  expiresAt       DateTime?

  type            String
  createdAt       DateTime  @default(now())
}

model Message {
  id              Int      @id @default(autoincrement())

  channelId       String
  userId          String
  message         String

  gameId          String?

  createdAt       DateTime @default(now())
}

model VerificationToken {
  id            Int        @id @default(autoincrement())
  userId        String  
  accessToken   String
  refreshToken  String

  createdAt     DateTime   @default(now())
}
