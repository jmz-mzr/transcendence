generator client {
  provider      = "prisma-client-js"
  engineType    = "binary"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fortytwoId     Int    @unique
  username       String @unique
  firstName      String
  lastName       String
  profilePicture String
  email          String

  has2FA Boolean

  friends      String[] @default([])
  blockedUsers String[]

  createdAt DateTime @default(now())

  channelsOwned Channel[]
  channels      ChannelUser[]
}

model Game {
  id Int @id @default(autoincrement())

  playerOne      String
  playerTwo      String
  playerOneScore Int
  playerTwoScore Int

  status String // waiting, pending, finished

  createdAt DateTime @default(now())
}

model Channel {
  id Int @id @default(autoincrement())

  private Boolean @default(false)

  ownerId Int
  owner   User @relation(fields: [ownerId], references: [id])

  users ChannelUser[]

  password  String?
  createdAt DateTime @default(now())
}

model ChannelUser {
  channelId Int
  channel   Channel @relation(fields: [channelId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  admin Boolean @default(false)

  @@id([channelId, userId])
}

model ChannelSanction {
  id Int @id @default(autoincrement())

  channelId Int
  user      Int
  expiresAt DateTime?

  type      String
  createdAt DateTime @default(now())
}

model Message {
  id Int @id @default(autoincrement())

  channelId Int
  userId    Int
  message   String

  gameId Int?

  createdAt DateTime @default(now())
}

model VerificationToken {
  id           Int    @id @default(autoincrement())
  userId       String
  accessToken  String
  refreshToken String

  createdAt DateTime @default(now())
}
